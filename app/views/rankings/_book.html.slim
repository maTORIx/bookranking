.d-block.d-md-none
  .card
    .card-header
      h6 #{(@books.current_page - 1) * @books.limit_value + book_counter + 1}位
      a(href="/books/#{book.id}") #{book.title}
    .card-body.d-flex.justify-content-between
      .mw-25.w-25
        img.mw-100.w-100(alt="img" src="#{book.cover_image.url}")
      .book-status.w-75
        - if ![:tag_score].include?(@order_param)
          h4 #{Book.column_japanese_names[@order_param]}: #{book[@order_param]} #{Book.classifiers[@order_param]}
        .stars
          .stars-box
            #star.star(style="width: #{book.all_review_point * 21}px;") ★★★★★
            #star-back.star-back ★★★★★
          .star-point #{book.all_review_point}
        = render book.categories
        = render book.authors
        = render book.tag_relations.alive

        
        - if book.description.length < 100
          p.break #{book.description}
        - else
          p.break #{book.description.slice(0, 100)}...
        br

        - if @order_param == :tag_score
          p #{params[:tags]}
          = render partial: "tags/tag_election", collection: book.tag_relations.where(tag_name: params[:tags].split(" ")), as: :tag_relation

        p 総合得点: #{book.score}, レビュー: #{book.review_length}件, 本棚: #{book.shelfed_length}件

.d-none.d-md-block
  .card
    .card-content

      .d-flex.justify-content-between
        .mw-25.w-25
          img.mw-100.w-100(alt="img" src="#{book.cover_image.url}")
        .card.w-75
          .card-header
            h6 #{(@books.current_page - 1) * @books.limit_value + book_counter + 1}位
            a(href="/books/#{book.id}") #{book.title}
          .card-body
            .book-status
              - if ![:tag_score].include?(@order_param)
                h4 #{Book.column_japanese_names[@order_param]}: #{book[@order_param]} #{Book.classifiers[@order_param]}

              .stars
                .stars-box
                  #star.star(style="width: #{book.all_review_point * 21}px;") ★★★★★
                  #star-back.star-back ★★★★★
                .star-point #{book.all_review_point}
              = render book.categories
              = render book.authors
              = render book.tag_relations.alive
                
              - if book.description.length < 100
                p.break #{book.description}
              - else
                p.break #{book.description.slice(0, 100)}...
              br
              - if @order_param == :tag_score
                p #{params[:tags]}
                = render partial: "tags/tag_election", collection: book.tag_relations.where(tag_name: params[:tags].split(" ")), as: :tag_relation

              p 総合得点: #{book.score}, レビュー: #{book.review_length}件, 本棚: #{book.shelfed_length}件
